os: linux
language: python

python:
  - 3.6

env:
  - TOXENV=py,codecov-travis OMPI_CC=/usr/bin/gcc-6 OMPI_CXX=/usr/bin/g++-6 SITE_CFG=linux

matrix:
  fast_finish: true
  include:
    - python: 3.6
      env:
        - TOXENV=py36,py36-pythran,codecov-travis
        - SITE_CFG=linux
      dist: xenial
      sudo: required
    - python: 3.7
      env:
        - TOXENV=py37,py37-pythran,codecov-travis
        - SITE_CFG=linux
      dist: xenial     # required for Python 3.7 (travis-ci/travis-ci#9069)
      sudo: required   # required for Python 3.7 (travis-ci/travis-ci#9069)
    - python: pypy3
      env:
        - TOXENV=pypy3,pypy3-pythran,codecov-travis
        - SITE_CFG=linux_pypy3
      sudo: required
    - os: osx
      osx_image: xcode8.3
      env: TOXENV=py PY=3 SITE_CFG=osx
      python: 3
      language: cpp
      compiler: clang
      cache: false
  allow_failures:
    - python: pypy3
    - os: osx

before_cache:
  - |
      coverage erase
      rm -f $HOME/.cache/pip/log/debug.log

cache:
    directories:
        - $HOME/.cache/pip
        # - $TRAVIS_BUILD_DIR/.tox

addons:
    apt:
        update: true
        sources:
            - ubuntu-toolchain-r-test
        packages:
            - gcc-6
            - g++-6
            - libopenmpi-dev
            - openmpi-bin
            - libopenblas-dev

before_install:
    - |
      if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        # Install Miniconda
        curl -s -o miniconda.sh https://repo.continuum.io/miniconda/Miniconda$PY-latest-MacOSX-x86_64.sh;
        export MINICONDA_PREFIX=$HOME/miniconda
        bash miniconda.sh -b -p $MINICONDA_PREFIX && rm miniconda.sh;
        echo ". $MINICONDA_PREFIX/etc/profile.d/conda.sh" >> ~/.bashrc;
        echo "conda activate" >> ~/.bashrc;
        source ~/.bashrc
        conda config --add channels conda-forge;
      fi

# Hotfix to make bootstrapping setup_requires work until PEP 518 is implemented
# with the release of pip==10.0.0
install:
    - |
      if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        # All dependencies inside tox.ini - since tox does not officially
        # allow conda install
        conda install -q -y virtualenv numpy cython mpi4py openmpi
        pip install -U tox fluiddevops coverage
      else
        pip install -U pip setuptools wheel six colorlog
        pip install -U tox coverage fluiddevops
      fi

before_script:
    - |
      mkdir -p $HOME/.config/matplotlib
      echo 'backend      : agg' > $HOME/.config/matplotlib/matplotlibrc

script:
    - set -o pipefail
    - tox -vv | fluidicat --every 1 --wait 300

after_failure:
    - cat $TRAVIS_BUILD_DIR/.tox/log/*.log

notifications:
  email: false
  irc: "chat.freenode.net#fluiddyn-dev"
