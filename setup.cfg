[metadata]
name = transonic
description = Make your Python code fly at transonic speeds!
long_description = file: README.rst
keywords = pythran
license = BSD License
classifiers =
    License :: OSI Approved :: BSD License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
author = Pierre Augier
home_page = https://transonic.readthedocs.io
project_urls =
    Source = https://foss.heptapod.net/fluiddyn/transonic
    Documentation = https://transonic.readthedocs.io
    Git Mirror = https://github.com/fluiddyn/transonic
version = attr: transonic._version.__version__

[options]
python_requires = >= 3.6
install_requires =
    gast ~=0.5.0
    beniget ~=0.4.0
    astunparse >=1.6.3 ; python_version < "3.9"
    # black  # avoid this dependency for now (see https://github.com/ambv/black/issues/552)
    autopep8
    numpy
package_dir=
    =src
packages=find:

[options.packages.find]
where=src

[options.entry_points]
console_scripts =
    transonic = transonic.run:run

[options.extras_require]
mpi =
    mpi4py

test =
    pytest
    pytest-cov
    coverage[toml]==6.1.2
    nbval
    pythran
    cython
    numba
    numpy==1.20  # for numba
    black
    scipy
    %(mpi)s

doc =
    sphinx
    sphinx_rtd_theme
    numpydoc
    jupyterlab
    nbsphinx
    recommonmark

dev =
    ipython
    %(doc)s
    %(test)s
    flake8
    pylint

[flake8]
ignore = E501,E225,E226,E303,E201,E202,E203,W503

[coverage:run]
source =
    src/transonic
    src/transonic_cl
    ./tests
data_file = .coverage/coverage
omit =
    */try_*.py
    */_old_*.py
    transonic/__pythran__/for_test_init.py
    transonic/__cython__/for_test_init.py
    transonic/__numba__/for_test_init.py
parallel = true

[coverage:report]
show_missing = true
exclude_lines =
    if __name__ == .__main__.:
    if "sphinx" in sys.modules:
    raise ValueError
    raise NotImplementedError
    raise RunTimeError
    raise ImportError
    except KeyError:
    except ImportError:
    except AttributeError:
    except NotImplementedError:
    except ModuleNotFoundError:
    except IndexError:
    except ValueError
    if test:
    if check:
    if __name__ == "__main__":
    if "sphinx" in sys.modules:

[coverage:html]
directory = .coverage/html

[coverage:xml]
output = .coverage/coverage.xml
